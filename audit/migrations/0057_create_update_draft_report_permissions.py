# Generated by Django 3.2.15 on 2022-10-25 17:53

from django.db import migrations


def create_permission(apps, model, codename, name):
    content_type = apps.get_model('contenttypes', 'ContentType')
    permission = apps.get_model('auth', 'Permission')
    obj_content_type = content_type.objects.get_for_model(model)
    content_type = content_type.objects.get(
        app_label=obj_content_type.app_label, model=obj_content_type.model
    )
    permission.objects.get_or_create(
        codename=codename, name=name, content_type=content_type
    )


def create_draft_report_permissions(apps, schema_editor):
    audit_auditor = apps.get_model('audit', 'AuditAuditor')
    create_permission(
        apps, audit_auditor, 'update_draft_report', 'Can update draft report'
    )


class Migration(migrations.Migration):
    dependencies = [
        ('audit', '0056_remove_deprecated_completed_created_At'),
    ]

    operations = [
        migrations.RunPython(create_draft_report_permissions),
        migrations.RunSQL(
            '''
            BEGIN;
            INSERT into
               public.auth_group_permissions (group_id, permission_id) (
               SELECT
                  g.id AS group_id, p.id AS permission_id
               FROM
                  public.auth_group g
                  cross join
                     public.auth_permission p
                  join django_content_type ct on ct.id = p.content_type_id
               WHERE
                  (
                      g.name = 'auditor' or g.name = 'auditor_admin'
                  )
                  AND p.codename = ANY (array [
                    'update_draft_report'
                    ]
                    )
                )
            ON CONFLICT DO NOTHING;
            COMMIT;
        '''
        ),
    ]

# Generated by Django 3.1.12 on 2022-02-01 01:44

import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models

import blueprint.models.control_family
import laika.storage


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('certification', '0012_set_default_visible_and_order'),
    ]

    operations = [
        migrations.CreateModel(
            name='ControlBlueprint',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('reference_id', models.CharField(max_length=100)),
                ('name', models.TextField(max_length=1024)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('IMPLEMENTED', 'Implemented'),
                            ('NOT IMPLEMENTED', 'Not Implemented'),
                        ],
                        default='NOT IMPLEMENTED',
                        max_length=255,
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'Controls Blueprint',
            },
        ),
        migrations.CreateModel(
            name='ControlGroupBlueprint',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.TextField(max_length=200)),
                ('reference_id', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImplementationGuideBlueprint',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=512, unique=True)),
                ('text', tinymce.models.HTMLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagBlueprint',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=512, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        choices=[
                            ('Global', 'Global'),
                            ('Controls', 'Controls'),
                            ('Action Items', 'Action Items'),
                        ],
                        default='Controls',
                        max_length=1024,
                        unique=True,
                    ),
                ),
                ('airtable_link', models.CharField(max_length=2000)),
                ('status_detail', models.TextField(blank=True)),
                ('synched_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='blueprint_pages',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name_plural': '[Global Blueprint]',
            },
        ),
        migrations.CreateModel(
            name='ControlFamilyBlueprint',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('acronym', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=255)),
                (
                    'illustration',
                    models.FileField(
                        blank=True,
                        max_length=1024,
                        storage=laika.storage.PublicMediaStorage(),
                        upload_to=blueprint.models.control_family.control_family_illustration_directory_path,
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('name', 'acronym')},
            },
        ),
        migrations.CreateModel(
            name='ControlCertificationSectionBlueprint',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'certification_section',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='certification.certificationsection',
                    ),
                ),
                (
                    'control',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='blueprint.controlblueprint',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ControlBlueprintTag',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'control',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='control_tags',
                        to='blueprint.controlblueprint',
                    ),
                ),
                (
                    'tag',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='blueprint.tagblueprint',
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='controlblueprint',
            name='certification_sections',
            field=models.ManyToManyField(
                related_name='controls_blueprint',
                through='blueprint.ControlCertificationSectionBlueprint',
                to='certification.CertificationSection',
            ),
        ),
        migrations.AddField(
            model_name='controlblueprint',
            name='family',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='controls',
                to='blueprint.controlfamilyblueprint',
            ),
        ),
        migrations.AddField(
            model_name='controlblueprint',
            name='group',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='controls',
                to='blueprint.controlgroupblueprint',
            ),
        ),
        migrations.AddField(
            model_name='controlblueprint',
            name='implementation_guide',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='control',
                to='blueprint.implementationguideblueprint',
            ),
        ),
        migrations.AddField(
            model_name='controlblueprint',
            name='tags',
            field=models.ManyToManyField(
                related_name='controls',
                through='blueprint.ControlBlueprintTag',
                to='blueprint.TagBlueprint',
            ),
        ),
    ]

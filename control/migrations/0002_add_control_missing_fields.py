# Generated by Django 3.0.3 on 2020-04-10 18:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('tag', '0001_initial_tag_model'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('control', '0004_update_control_model'),
    ]

    operations = [
        migrations.AddField(
            model_name='control',
            name='administrator',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='control_admin',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='control',
            name='approver',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='control_approver',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='control',
            name='category',
            field=models.CharField(
                blank=True,
                choices=[
                    ('Asset Management', 'Asset Management'),
                    (
                        'Business Continuity & Disaster Recovery',
                        'Business Continuity & Disaster Recovery',
                    ),
                    (
                        'Capacity & Performance Planning',
                        'Capacity & Performance Planning',
                    ),
                    ('Change Management', 'Change Management'),
                    ('Compliance', 'Compliance'),
                    ('Configuration Management', 'Configuration Management'),
                    ('Cryptographic Protections', 'Cryptographic Protections'),
                    (
                        'Data Classification & Handling',
                        'Data Classification & Handling',
                    ),
                    ('Endpoint Security', 'Endpoint Security'),
                    ('Human Resources Security', 'Human Resources Security'),
                    (
                        'Identification & Authentication',
                        'Identification & Authentication',
                    ),
                    ('Incident Response', 'Incident Response'),
                    ('Information Assurance', 'Information Assurance'),
                    ('Mobile Device Management', 'Mobile Device Management'),
                    ('Monitoring', 'Monitoring'),
                    ('Network Security', 'Network Security'),
                    (
                        'Physical & Environmental Security',
                        'Physical & Environmental Security',
                    ),
                    ('Privacy', 'Privacy'),
                    ('Project & Resource Management', 'Project & Resource Management'),
                    ('Risk Management', 'Risk Management'),
                    (
                        'Secure Engineering & Architecture',
                        'Secure Engineering & Architecture',
                    ),
                    ('Security & Privacy Governance', 'Security & Privacy Governance'),
                    ('Security Awareness & Training', 'Security Awareness & Training'),
                    ('Security Operations', 'Security Operations'),
                    (
                        'Technology Development & Acquisition',
                        'Technology Development & Acquisition',
                    ),
                    ('Third-Party Management', 'Third-Party Management'),
                    ('Threat Management', 'Threat Management'),
                    (
                        'Vulnerability & Patch Management',
                        'Vulnerability & Patch Management',
                    ),
                    ('Other', 'Other'),
                ],
                max_length=200,
            ),
        ),
        migrations.AddField(
            model_name='control',
            name='description',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='control',
            name='frequency',
            field=models.CharField(
                blank=True,
                choices=[
                    ('Not Applicable', 'Not Applicable'),
                    ('Every Day', 'Every Day'),
                    ('Every Week', 'Every Week'),
                    ('Every Month', 'Every Month'),
                ],
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name='control',
            name='implementation_notes',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AddField(
            model_name='control',
            name='owner',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='control_owner',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='control',
            name='status',
            field=models.CharField(blank=True, max_length=30),
        ),
        migrations.CreateModel(
            name='ControlTag',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'control',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='control_tags',
                        to='control.Control',
                    ),
                ),
                (
                    'tag',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='tag.Tag'
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='control',
            name='tags',
            field=models.ManyToManyField(
                related_name='controls', through='control.ControlTag', to='tag.Tag'
            ),
        ),
    ]

# Generated by Django 3.1.6 on 2021-07-13 21:24

import logging

from django.db import migrations

from ..models import ConnectionAccount

logger = logging.getLogger('duplicated_connection_account_alias_migration')


def migrate_duplicated_connection_accounts(apps, groups):
    Organization = apps.get_model('organization', 'Organization')
    for organization in Organization.objects.all():
        duplicated_connections = {}
        logger.info(
            f'Validating duplicated connection names on organization {organization}\n'
        )
        for filtered_connection in organization.connection_accounts.all():
            duplicated_connections[
                f'{filtered_connection.alias}'
            ] = ConnectionAccount.objects.filter(
                integration=filtered_connection.integration,
                organization=filtered_connection.organization,
                alias=filtered_connection.alias,
            )
        for item in duplicated_connections.items():
            if len(item[1]) >= 2:
                for index in range(0, len(item[1])):
                    if index == len(item[1]) - 1:
                        break
                    logger.info(
                        f'Appending index {index + 1} on connection account'
                        f' {item[1][index].alias}\n'
                    )
                    item[1][index].alias = f'{item[1][index].alias}_{index + 1}'
                    item[1][index].save()


class Migration(migrations.Migration):
    dependencies = [
        ('organization', '0043_add_new_setup_steps'),
        ('integration', '0022_adding_email_logo_field'),
    ]

    operations = [
        migrations.RunPython(migrate_duplicated_connection_accounts),
        migrations.AlterUniqueTogether(
            name='connectionaccount',
            unique_together={('alias', 'organization', 'integration')},
        ),
    ]

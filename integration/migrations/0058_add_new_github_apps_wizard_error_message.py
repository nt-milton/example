# Generated by Django 3.2.15 on 2022-08-16 21:29
import logging

from django.db import migrations

from integration.error_codes import USER_INPUT_ERROR

logger = logging.getLogger(__name__)


NEW_ERROR_CODE = {
    'wizard_error_code': '004',
    'wizard_message': (
        'The Github integration only supports organizations. Please add an organization'
        ' instead of a user account to complete the integration.'
    ),
}


def add_not_allowed_personal_account_wizard_error_code(apps, _):
    integration_model = apps.get_model('integration', 'Integration')
    error_catalogue_model = apps.get_model('integration', 'ErrorCatalogue')

    integration = integration_model.objects.filter(
        vendor__name__iexact='Github Apps'
    ).first()
    error = error_catalogue_model.objects.get(code=USER_INPUT_ERROR)

    if integration:
        NEW_ERROR_CODE.update({'error': error})
        integration.alerts.create(**NEW_ERROR_CODE)
    else:
        logger.info(f'The integration called Github Apps not exist to add alerts')


class Migration(migrations.Migration):
    dependencies = [
        ('integration', '0057_delete_connectionresponsehistory'),
    ]

    operations = [
        migrations.RunPython(add_not_allowed_personal_account_wizard_error_code)
    ]

# Generated by Django 3.2.15 on 2022-09-07 19:31
import logging

from django.db import migrations

from integration.error_codes import USER_INPUT_ERROR

logger = logging.getLogger(__name__)

NEW_ERROR_CODE = {
    'wizard_error_code': '001',
    'wizard_message': (
        'Invalid credentials or insufficient permissions on credentials, please check'
        ' and try again'
    ),
}


def add_datadog_invalid_credentials_alert(apps, _):
    integration_model = apps.get_model('integration', 'Integration')
    error_catalogue_model = apps.get_model('integration', 'ErrorCatalogue')
    try:
        integration = integration_model.objects.get(vendor__name__iexact='Datadog')
        error = error_catalogue_model.objects.get(code=USER_INPUT_ERROR)
        NEW_ERROR_CODE.update({'error': error})
        integration.alerts.create(**NEW_ERROR_CODE)
    except integration_model.DoesNotExist:
        logger.info(f'The integration called Datadog not exist to add alerts')


class Migration(migrations.Migration):
    dependencies = [
        ('integration', '0060_add_bad_request_error_code'),
    ]

    operations = [migrations.RunPython(add_datadog_invalid_credentials_alert)]

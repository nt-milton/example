# Generated by Django 3.2.15 on 2022-11-25 14:52
import logging

from django.db import migrations

from integration import error_codes

logger = logging.getLogger(__name__)

NEW_ERROR_CODES = [
    {
        'error_code': error_codes.INSUFFICIENT_PERMISSIONS,
        'wizard_error': {
            'wizard_error_code': '001',
            'wizard_message': 'Insufficient permissions, please check and try again',
        },
    },
    {
        'error_code': error_codes.BAD_CLIENT_CREDENTIALS,
        'wizard_error': {
            'wizard_error_code': '002',
            'wizard_message': 'Invalid Client Credentials, please check and try again',
        },
    },
]


def add_error_code(apps, _):
    integration_model = apps.get_model('integration', 'Integration')
    vendor_model = apps.get_model('vendor', 'Vendor')
    error_catalogue_model = apps.get_model('integration', 'ErrorCatalogue')

    try:
        if not vendor_model.objects.filter(name__iexact='Auth0').exists():
            return
        integration = integration_model.objects.get(vendor__name__iexact='Auth0')
    except integration_model.DoesNotExist:
        integration = integration_model(
            vendor=vendor_model.objects.get(name__iexact='Auth0'),
            description=(
                "Auth0 is a flexible, drop-in solution to add "
                "authentication and authorization services to your "
                "applications. Your team and organization can avoid "
                "the cost, time, and risk that come with building "
                "your own solution to authenticate and authorize "
                "users."
            ),
            metadata={"disabled": True, "laika_objects": "user,account"},
            category='other',
        )
        integration.save()
    for new_error_code in NEW_ERROR_CODES:
        error = error_catalogue_model.objects.get(code=new_error_code.get('error_code'))
        integration.alerts.create(**new_error_code.get('wizard_error', {}), error=error)


class Migration(migrations.Migration):
    dependencies = [
        ('integration', '0066_add_is_not_admin_integration_alert_for_linear'),
    ]

    operations = [migrations.RunPython(add_error_code)]

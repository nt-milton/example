# Generated by Django 3.2.12 on 2022-04-25 18:56
import logging

from django.db import migrations, models

logger = logging.getLogger(__name__)


def migrate_library_entry_data(apps, schema_editor):
    short_answer_options = ['Yes', 'No', 'N/A']
    library_entry_model = apps.get_model('library', 'LibraryEntry')
    question_model = apps.get_model('library', 'Question')

    library_entries = library_entry_model.objects.filter(
        question__isnull=False
    ).iterator()
    library_entries_to_update = []
    questions_to_update = []

    for library_entry in library_entries:
        try:
            library_entry.short_answer_text = (
                library_entry.get_answer_choice_display()
                if library_entry.answer_choice
                else ''
            )
            question_metadata = library_entry.question.metadata
            answer_addresses = question_metadata.get('answerAddresses', [])
            library_entry.question.metadata = {
                **question_metadata,
                'answerAddresses': [answer_addresses[0]]
                if len(answer_addresses) > 0
                else [],
                'answer': {
                    'address': answer_addresses[0] if len(answer_addresses) > 0 else '',
                    'options': [],
                },
                'shortAnswer': {
                    'address': '',
                    'options': short_answer_options
                    if library_entry.answer_choice
                    else [],
                },
            }
            questions_to_update.append(library_entry.question)
            library_entries_to_update.append(library_entry)

        except Exception as err:
            logger.error(
                'Error migrating answer choice and metadata from library entry:'
                f' {library_entry.id} Error: {err}'
            )

    try:
        library_entry_model.objects.bulk_update(
            library_entries_to_update, ['short_answer_text']
        )
        question_model.objects.bulk_update(questions_to_update, ['metadata'])
    except Exception as err:
        logger.error(f'Error updating library entries and questionsError: {err}')


class Migration(migrations.Migration):
    dependencies = [
        ('library', '0023_add_trigram_extension'),
    ]

    operations = [
        migrations.AddField(
            model_name='libraryentry',
            name='short_answer_text',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.RunPython(
            migrate_library_entry_data, reverse_code=migrations.RunPython.noop
        ),
    ]

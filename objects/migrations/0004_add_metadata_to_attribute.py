# Generated by Django 3.0.7 on 2020-08-14 23:45

import django.contrib.postgres.fields.jsonb
from django.db import migrations

from objects.types import AttributeTypeFactory


def fields_to_metadata(apps, schema_editor):
    Attribute = apps.get_model("objects", "Attribute")
    for attribute in Attribute.objects.all():
        attribute._metadata = {'is_protected': attribute.is_protected}
        if attribute.default_value:
            attribute_type = AttributeTypeFactory.get_attribute_type(attribute)
            attribute._metadata['default_value'] = attribute_type.format(
                attribute.default_value
            )
        else:
            attribute._metadata['default_value'] = None

        attribute.attribute_type = attribute.attribute_type.upper()
        attribute.save()


def metadata_to_fields(apps, schema_editor):
    Attribute = apps.get_model("objects", "Attribute")
    for attribute in Attribute.objects.all():
        if 'is_protected' in attribute._metadata:
            attribute.is_protected = attribute._metadata['is_protected']
        else:
            attribute.is_protected = False

        if attribute._metadata['default_value']:
            attribute.default_value = str(attribute._metadata['default_value'])
        else:
            attribute.default_value = ''

        attribute.attribute_type = attribute.attribute_type.lower()
        attribute.save()


class Migration(migrations.Migration):
    dependencies = [
        ('objects', '0003_object_type_display_index'),
    ]

    operations = [
        # step 1: add _metadata field as nullable
        migrations.AddField(
            model_name='attribute',
            name='_metadata',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=True),
        ),
        # step 2: transfer default_value and is_protected to _metadata
        migrations.RunPython(fields_to_metadata, reverse_code=metadata_to_fields),
        # step 3: set _metadata field as not nullable
        migrations.AlterField(
            model_name='attribute',
            name='_metadata',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=False),
        ),
        # step 4: remove default_value and is_protected
        migrations.RemoveField(
            model_name="attribute",
            name="default_value",
        ),
        migrations.RemoveField(
            model_name="attribute",
            name="is_protected",
        ),
    ]

import datetime
import json

import pytest

from laika.tests import mock_responses
from pentest.models import PentestRequest
from pentest.tests.factory import SET_QUESTIONARY_RESPONSE, load_response


@pytest.fixture
def get_typeform_result_response():
    response = load_response('get_typeform_result_response.json')
    with mock_responses([response]):
        yield json.loads(response)['items'][0]['answers']


@pytest.mark.functional(permissions=['pentest.change_pentestrequest'])
def test_set_form_response(
    graphql_client, graphql_organization, get_typeform_result_response
):
    user = graphql_client.context.get('user')
    pentest_request = PentestRequest.objects.create(
        created_by=user,
        organization=graphql_organization,
        name='Testing',
        target_date=datetime.datetime.now(),
    )
    response = graphql_client.execute(
        SET_QUESTIONARY_RESPONSE,
        variables={
            'pentestRequestId': pentest_request.id,
            'responseId': 'testing',
        },
    )
    response_pentest = response['data']['setQuestionaryResponse']['pentest']
    pentest_request.refresh_from_db()
    assert str(pentest_request.id) == response_pentest['id']
    assert pentest_request.questionary_response == get_typeform_result_response
    assert response_pentest['questionaryResponse'] == json.dumps(
        get_typeform_result_response
    )

import requests
from tenacity import (
    retry,
    retry_if_exception_type,
    stop_after_attempt,
    wait_exponential,
)

from laika.settings import DJANGO_SETTINGS
from pentest.constants import RETRY_ATTEMPTS
from pentest.exceptions import ResourceNotAvailable

TYPEFORM_BASE_URL = 'https://api.typeform.com'
TYPEFORM_TOKEN = DJANGO_SETTINGS.get('TYPEFORM_TOKEN')


def get_typeform_response(pentest_form_id, response_id):
    return requests.get(
        f'{TYPEFORM_BASE_URL}/forms/{pentest_form_id}/responses',
        headers={'Authorization': f'Bearer {TYPEFORM_TOKEN}'},
        params={'included_response_ids': response_id},
    )


@retry(
    stop=stop_after_attempt(RETRY_ATTEMPTS),
    wait=wait_exponential(),
    reraise=True,
    retry=retry_if_exception_type(ResourceNotAvailable),
)
def get_typeform_answer_from_response(pentest_form_id, response_id):
    json_response = get_typeform_response(pentest_form_id, response_id).json()
    items = json_response['items']
    if len(items) > 0:
        return items[0]['answers']
    raise ResourceNotAvailable('The form response has not been loaded yet')

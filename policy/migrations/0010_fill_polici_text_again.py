# Generated by Django 3.1.2 on 2020-11-09 14:42

import logging

from django.db import migrations
from django.db.models import Q

from laika.utils.files import filename_has_extension, get_docx_file_content

logger = logging.getLogger('policy_migration')


def fill_policy_text(apps, schema_editor):
    Policy = apps.get_model('policy', 'Policy')
    policies = Policy.objects.filter(
        Q(is_published=True) & (Q(policy_text__isnull=True) | Q(policy_text=''))
    )
    policy_id = ''
    for p in policies:
        try:
            if p.policy_text:
                continue

            policy_id = p.id
            logger.info(f'Getting file content for policy: {policy_id}')
            if not filename_has_extension(p.draft.name):
                logger.warning(
                    f'Skipping policy: {policy_id}. Policy is not a docx file'
                )
                continue
            p.policy_text = get_docx_file_content(p.draft, policy_id)
            p.save()
        except Exception as e:
            logger.exception(f'Failed filling policy: {policy_id} text with error {e}')
            continue


class Migration(migrations.Migration):
    dependencies = [
        ('policy', '0009_fill_policy_text_column'),
    ]

    operations = [migrations.RunPython(fill_policy_text)]

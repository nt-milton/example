# Generated by Django 3.0.3 on 2020-04-14 17:59

import uuid

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    VENDOR_CERTIFICATION = 'vendor.Certification'
    PROGRAM_SUBTASK = 'program.SubTask'

    dependencies = [
        ('program', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='task',
            name='display_id',
        ),
        migrations.RemoveField(
            model_name='task',
            name='howto_guide',
        ),
        migrations.RemoveField(
            model_name='task',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='task',
            name='priority',
        ),
        migrations.RemoveField(
            model_name='task',
            name='status',
        ),
        migrations.AddField(
            model_name='program',
            name='program_lead',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AddField(
            model_name='subtask',
            name='due_date',
            field=models.DateField(blank=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='subtask',
            name='priority',
            field=models.CharField(
                choices=[
                    ('required', 'Required'),
                    ('key', 'Key'),
                    ('recommeded', 'Recommended'),
                ],
                default='required',
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name='program',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='program',
            name='description',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='program',
            name='documentation_link',
            field=models.TextField(blank=True),
        ),
        migrations.RemoveField(
            model_name='program',
            name='id',
        ),
        migrations.AddField(
            model_name='program',
            name='id',
            field=models.UUIDField(
                default=uuid.uuid4, primary_key=True, serialize=False
            ),
        ),
        migrations.AlterField(
            model_name='program',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='program',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='subtask',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='subtask',
            name='group',
            field=models.CharField(
                choices=[
                    ('documentation', 'Documentation'),
                    ('policy', 'Policy'),
                    ('implementation', 'Implementation'),
                ],
                default=None,
                max_length=100,
            ),
        ),
        migrations.RemoveField(
            model_name='subtask',
            name='id',
        ),
        migrations.AddField(
            model_name='subtask',
            name='id',
            field=models.UUIDField(
                default=uuid.uuid4, primary_key=True, serialize=False
            ),
        ),
        migrations.AlterField(
            model_name='subtask',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='task',
            name='category',
            field=models.CharField(
                choices=[
                    ('Asset Management', 'Asset Management'),
                    (
                        'Business Continuity & Disaster Recovery',
                        'Business Continuity & Disaster Recovery',
                    ),
                    (
                        'Capacity & Performance Planning',
                        'Capacity & Performance Planning',
                    ),
                    ('Change Management', 'Change Management'),
                    ('Cloud Security', 'Cloud Security'),
                    ('Compliance', 'Compliance'),
                    ('Configuration Management', 'Configuration Management'),
                    ('Cryptographic Protections', 'Cryptographic Protections'),
                    (
                        'Data Classification & Handling',
                        'Data Classification & Handling',
                    ),
                    ('Embedded Technology', 'Embedded Technology'),
                    ('Endpoint Security', 'Endpoint Security'),
                    ('Human Resources Security', 'Human Resources Security'),
                    (
                        'Identification & Authentication',
                        'Identification & Authentication',
                    ),
                    ('Incident Response', 'Incident Response'),
                    ('Information Assurance', 'Information Assurance'),
                    ('Maintenance', 'Maintenance'),
                    ('Mobile Device Management', 'Mobile Device Management'),
                    ('Monitoring', 'Monitoring'),
                    ('Network Security', 'Network Security'),
                    (
                        'Physical & Environmental Security',
                        'Physical & Environmental Security',
                    ),
                    ('Privacy', 'Privacy'),
                    ('Project & Resource Management', 'Project & Resource Management'),
                    ('Risk Management', 'Risk Management'),
                    (
                        'Secure Engineering & Architecture',
                        'Secure Engineering & Architecture',
                    ),
                    ('Security & Privacy Governance', 'Security & Privacy Governance'),
                    ('Security Awareness & Training', 'Security Awareness & Training'),
                    ('Security Operations', 'Security Operations'),
                    (
                        'Technology Development & Acquisition',
                        'Technology Development & Acquisition',
                    ),
                    ('Third-Party Management', 'Third-Party Management'),
                    ('Threat Management', 'Threat Management'),
                    (
                        'Vulnerability & Patch Management',
                        'Vulnerability & Patch Management',
                    ),
                    ('Web Security', 'Web Security'),
                    ('Other', 'Other'),
                ],
                default='Other',
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name='task',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.RemoveField(
            model_name='task',
            name='id',
        ),
        migrations.AddField(
            model_name='task',
            name='id',
            field=models.UUIDField(
                default=uuid.uuid4, primary_key=True, serialize=False
            ),
        ),
        migrations.AlterField(
            model_name='task',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='task',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.RemoveField(
            model_name='task',
            name='controls',
        ),
        migrations.DeleteModel(
            name='TaskControl',
        ),
        migrations.CreateModel(
            name='TaskControl',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'control',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='control.Control',
                    ),
                ),
                (
                    'task',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='program.Task'
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'controls',
            },
        ),
        migrations.AddField(
            model_name='task',
            name='controls',
            field=models.ManyToManyField(
                related_name='tasks',
                through='program.TaskControl',
                to='control.Control',
            ),
        ),
        migrations.RemoveField(
            model_name='task',
            name='program',
        ),
        migrations.AddField(
            model_name='task',
            name='program',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='tasks',
                to='program.Program',
            ),
        ),
        migrations.RemoveField(
            model_name='program',
            name='certifications',
        ),
        migrations.DeleteModel(
            name='ProgramCertification',
        ),
        migrations.CreateModel(
            name='ProgramCertification',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('is_locked', models.BooleanField(default=False)),
                (
                    'certification',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=VENDOR_CERTIFICATION,
                    ),
                ),
                (
                    'program',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='program.Program',
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'certifications',
            },
        ),
        migrations.AddField(
            model_name='program',
            name='certifications',
            field=models.ManyToManyField(
                related_name='programs',
                through='program.ProgramCertification',
                to=VENDOR_CERTIFICATION,
            ),
        ),
        migrations.RemoveField(
            model_name='subtask',
            name='tags',
        ),
        migrations.DeleteModel(
            name='SubtaskTag',
        ),
        migrations.CreateModel(
            name='SubtaskTag',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'subtask',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=PROGRAM_SUBTASK,
                    ),
                ),
                (
                    'tag',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='tag.Tag'
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.AddField(
            model_name='subtask',
            name='tags',
            field=models.ManyToManyField(
                related_name='subtasks', through='program.SubtaskTag', to='tag.Tag'
            ),
        ),
        migrations.RemoveField(
            model_name='subtask',
            name='certifications',
        ),
        migrations.DeleteModel(
            name='SubtaskCertification',
        ),
        migrations.CreateModel(
            name='SubtaskCertification',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'certification',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=VENDOR_CERTIFICATION,
                    ),
                ),
                (
                    'subtask',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=PROGRAM_SUBTASK,
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'certifications',
            },
        ),
        migrations.AddField(
            model_name='subtask',
            name='certifications',
            field=models.ManyToManyField(
                related_name='subtasks',
                through='program.SubtaskCertification',
                to=VENDOR_CERTIFICATION,
            ),
        ),
        migrations.RemoveField(
            model_name='subtask',
            name='evidence',
        ),
        migrations.DeleteModel(
            name='SubtaskEvidence',
        ),
        migrations.CreateModel(
            name='SubtaskEvidence',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'evidence',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='evidence.Evidence',
                    ),
                ),
                (
                    'subtask',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=PROGRAM_SUBTASK,
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'evidence',
            },
        ),
        migrations.AddField(
            model_name='subtask',
            name='evidence',
            field=models.ManyToManyField(
                related_name='subtasks',
                through='program.SubtaskEvidence',
                to='evidence.Evidence',
            ),
        ),
        migrations.RemoveField(
            model_name='subtask',
            name='task',
        ),
        migrations.AddField(
            model_name='subtask',
            name='task',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='subtasks',
                to='program.Task',
            ),
        ),
    ]

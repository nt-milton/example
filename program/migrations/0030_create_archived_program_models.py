# Generated by Django 3.1.2 on 2021-01-15 19:19

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

import evidence.models
import laika.storage

TO_ORGANIZATION = 'organization.organization'


class Migration(migrations.Migration):
    dependencies = [
        ('organization', '0008_organization_logo'),
        ('evidence', '0019_name_to_migrated_evidence'),
        ('program', '0029_deleting_tags_by_subtasks_view'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArchivedProgram',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ('data', models.JSONField()),
                (
                    'organization',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='archived_program',
                        to=TO_ORGANIZATION,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ArchivedTask',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ('data', models.JSONField()),
                (
                    'organization',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='archived_task',
                        to=TO_ORGANIZATION,
                    ),
                ),
                (
                    'program',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='tasks',
                        to='program.archivedprogram',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ArchivedSubtask',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ('data', models.JSONField()),
                (
                    'task',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='subtasks',
                        to='program.archivedtask',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ArchivedEvidence',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True)),
                (
                    'file',
                    models.FileField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        storage=laika.storage.PrivateMediaStorage(),
                        upload_to=evidence.models.evidence_upload_directory,
                    ),
                ),
                (
                    'type',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('POLICY', 'Policy'),
                            ('LEGACY_DOCUMENT', 'Legacy Document'),
                            ('FILE', 'File'),
                            ('TEAM', 'Team'),
                            ('OFFICER', 'Officer'),
                            ('LINK', 'Link'),
                            ('LAIKA_PAPER', 'Laika Paper'),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    'archived_task',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='archived_evidence',
                        to='program.archivedtask',
                    ),
                ),
                (
                    'legacy_evidence',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='archived_evidence',
                        to='evidence.evidence',
                    ),
                ),
                (
                    'organization',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='archived_evidence',
                        to=TO_ORGANIZATION,
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'archived evidence',
            },
        ),
    ]
